CREATE EXTENSION schema_triggers;
-- Create an event trigger for the column_add event.
CREATE OR REPLACE FUNCTION on_column_add()
 RETURNS event_trigger
 LANGUAGE plpgsql
 AS $$
	DECLARE
		event_info SCHEMA_TRIGGERS.COLUMN_ADD_EVENTINFO;
	BEGIN
		event_info := schema_triggers.get_column_add_eventinfo();
		RAISE NOTICE 'on_column_add(%, %)', event_info.relation, event_info.attnum;
		RAISE NOTICE '  new.attname=''%'', new.atttypid=%, new.attnotnull=''%''',
	 		(event_info.new).attname, (event_info.new).atttypid, (event_info.new).attnotnull;
	END;
 $$;
CREATE EVENT TRIGGER coladd ON column_add
	EXECUTE PROCEDURE on_column_add();
-- Create an event trigger for the column_alter event.
CREATE OR REPLACE FUNCTION on_column_alter()
 RETURNS event_trigger
 LANGUAGE plpgsql
 AS $$
	DECLARE
		event_info SCHEMA_TRIGGERS.COLUMN_ALTER_EVENTINFO;
	BEGIN
		event_info := schema_triggers.get_column_alter_eventinfo();
		RAISE NOTICE 'on_column_alter(%, %)', event_info.relation, event_info.attnum;
		RAISE NOTICE '  old.attname=''%'', old.atttypid=%, old.attnotnull=''%''',
	 		(event_info.old).attname, (event_info.old).atttypid, (event_info.old).attnotnull;
		RAISE NOTICE '  new.attname=''%'', new.atttypid=%, new.attnotnull=''%''',
	 		(event_info.new).attname, (event_info.new).atttypid, (event_info.new).attnotnull;
	END;
 $$;
CREATE EVENT TRIGGER colalter ON column_alter
	EXECUTE PROCEDURE on_column_alter();
-- Create an event trigger for the column_drop event.
CREATE OR REPLACE FUNCTION on_column_drop()
 RETURNS event_trigger
 LANGUAGE plpgsql
 AS $$
	DECLARE
		event_info SCHEMA_TRIGGERS.COLUMN_DROP_EVENTINFO;
	BEGIN
		event_info := schema_triggers.get_column_drop_eventinfo();
		RAISE NOTICE 'on_column_drop(%, %)', event_info.relation, event_info.attnum;
		RAISE NOTICE '  old.attname=''%'', old.atttypid=%, old.attnotnull=''%''',
	 		(event_info.old).attname, (event_info.old).atttypid, (event_info.old).attnotnull;
	END;
 $$;
CREATE EVENT TRIGGER coldrop ON column_drop
	EXECUTE PROCEDURE on_column_drop();
-- Create some tables, and then alter their columns.
CREATE TABLE foobar();
ALTER TABLE foobar ADD COLUMN x TEXT NOT NULL;
NOTICE:  on_column_add(foobar, 1)
NOTICE:    new.attname='x', new.atttypid=25, new.attnotnull='t'
ALTER TABLE foobar RENAME COLUMN x TO xxx;
NOTICE:  on_column_alter(foobar, 1)
NOTICE:    old.attname='x', old.atttypid=25, old.attnotnull='t'
NOTICE:    new.attname='xxx', new.atttypid=25, new.attnotnull='t'
ALTER TABLE foobar ALTER COLUMN xxx DROP NOT NULL;
NOTICE:  on_column_alter(foobar, 1)
NOTICE:    old.attname='xxx', old.atttypid=25, old.attnotnull='t'
NOTICE:    new.attname='xxx', new.atttypid=25, new.attnotnull='f'
ALTER TABLE foobar ALTER COLUMN xxx TYPE BOOLEAN USING (FALSE);
NOTICE:  on_column_alter(foobar, 1)
NOTICE:    old.attname='xxx', old.atttypid=25, old.attnotnull='f'
NOTICE:    new.attname='xxx', new.atttypid=16, new.attnotnull='f'
ALTER TABLE foobar DROP COLUMN xxx;
NOTICE:  on_column_drop(foobar, 1)
NOTICE:    old.attname='xxx', old.atttypid=16, old.attnotnull='f'
DROP TABLE foobar;
CREATE TABLE baz(a INTEGER PRIMARY KEY, b TEXT, c BOOLEAN);
ALTER TABLE baz DROP COLUMN c;
NOTICE:  on_column_drop(baz, 3)
NOTICE:    old.attname='c', old.atttypid=16, old.attnotnull='f'
ALTER TABLE baz SET WITH OIDS;
NOTICE:  on_column_add(baz, -2)
NOTICE:    new.attname='oid', new.atttypid=26, new.attnotnull='t'
ALTER TABLE baz ALTER COLUMN b SET NOT NULL;
NOTICE:  on_column_alter(baz, 2)
NOTICE:    old.attname='b', old.atttypid=25, old.attnotnull='f'
NOTICE:    new.attname='b', new.atttypid=25, new.attnotnull='t'
ALTER TABLE baz RENAME COLUMN a TO aaa;
NOTICE:  on_column_alter(baz, 1)
NOTICE:    old.attname='a', old.atttypid=23, old.attnotnull='t'
NOTICE:    new.attname='aaa', new.atttypid=23, new.attnotnull='t'
ALTER TABLE baz SET WITHOUT OIDS;
NOTICE:  on_column_drop(baz, -2)
NOTICE:    old.attname='oid', old.atttypid=26, old.attnotnull='t'
DROP TABLE baz;
CREATE TABLE xyzzy(abc INTEGER, def INTEGER, ghi INTEGER);
ALTER TABLE xyzzy
	ALTER COLUMN abc TYPE TEXT,
	ADD COLUMN jkl BOOLEAN NOT NULL,
	DROP COLUMN def,
	ALTER COLUMN ghi SET NOT NULL;
NOTICE:  on_column_drop(xyzzy, 2)
NOTICE:    old.attname='def', old.atttypid=23, old.attnotnull='f'
NOTICE:  on_column_alter(xyzzy, 1)
NOTICE:    old.attname='abc', old.atttypid=23, old.attnotnull='f'
NOTICE:    new.attname='abc', new.atttypid=25, new.attnotnull='f'
NOTICE:  on_column_add(xyzzy, 4)
NOTICE:    new.attname='jkl', new.atttypid=16, new.attnotnull='t'
NOTICE:  on_column_alter(xyzzy, 3)
NOTICE:    old.attname='ghi', old.atttypid=23, old.attnotnull='f'
NOTICE:    new.attname='ghi', new.atttypid=23, new.attnotnull='t'
DROP TABLE xyzzy;
-- Clean up the event trigger.
DROP EVENT TRIGGER coladd;
DROP EVENT TRIGGER colalter;
DROP EVENT TRIGGER coldrop;
DROP FUNCTION on_column_add();
DROP FUNCTION on_column_alter();
DROP FUNCTION on_column_drop();
DROP EXTENSION schema_triggers;
