-- Test that the CREATE/ALTER/DROP EVENT TRIGGER commands work as expected.
CREATE EXTENSION schema_triggers;
-- Exercise the various cases that shouldn't work.
CREATE EVENT TRIGGER wont_work ON phase_of_the_moon
	EXECUTE PROCEDURE foo();
INFO:  pg_schema_triggers:  didn't recognize event name, ignoring.
ERROR:  unrecognized event name "phase_of_the_moon"
CREATE EVENT TRIGGER wont_work ON relation_create
	EXECUTE PROCEDURE undefined_function();
ERROR:  function undefined_function() does not exist
CREATE EVENT TRIGGER wrong_func_result_type ON relation_create
	EXECUTE PROCEDURE pg_client_encoding();
ERROR:  function "pg_client_encoding" must return type "event_trigger"
-- Before we create a working event trigger, we need a function to execute.
CREATE FUNCTION raise_notice()
 RETURNS event_trigger
 AS $$ BEGIN RAISE NOTICE 'do_notice:  event=(%)', TG_EVENT; END; $$
 LANGUAGE plpgsql;
-- Ensure that we're not allowed to specify a WHEN clause.
CREATE EVENT TRIGGER cannot_have_when_clause ON relation_create
	WHEN tag IN ('foo')
	EXECUTE PROCEDURE raise_notice();
ERROR:  event "relation_create" cannot have a WHEN clause
-- Exercise the basic event trigger DDL.
CREATE EVENT TRIGGER one ON relation_create
	EXECUTE PROCEDURE raise_notice();
CREATE EVENT TRIGGER two ON relation_alter
	EXECUTE PROCEDURE raise_notice();
CREATE TABLE foobar();
NOTICE:  do_notice:  event=(relation_create)
ALTER TABLE foobar ADD COLUMN a TEXT;
DROP TABLE foobar;
ALTER EVENT TRIGGER one DISABLE;
ALTER EVENT TRIGGER two DISABLE;
CREATE TABLE foobar();
ALTER TABLE foobar ADD COLUMN a TEXT;
DROP TABLE foobar;
-- Try to drop the raise_notice() function, which should fail.
DROP FUNCTION raise_notice();
ERROR:  cannot drop function raise_notice() because other objects depend on it
DETAIL:  event trigger one depends on function raise_notice()
event trigger two depends on function raise_notice()
HINT:  Use DROP ... CASCADE to drop the dependent objects too.
DROP EVENT TRIGGER one;
DROP EVENT TRIGGER two;
-- Now try to drop the raise_notice() function again, which should succeed.
DROP FUNCTION raise_notice();
DROP EXTENSION schema_triggers;
